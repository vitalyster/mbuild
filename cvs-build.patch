*** build-aux/config.guess	Tue Apr  5 13:42:48 2005
--- build-aux/config.guess	Tue Aug 16 18:54:10 2011
*************** EOF
*** 778,783 ****
--- 778,786 ----
      i*:MINGW*:*)
  	echo ${UNAME_MACHINE}-pc-mingw32
  	exit 0 ;;
+ 	*:MSYS*:*)
+ 	echo ${UNAME_MACHINE}-pc-msys32
+ 	exit 0 ;;
      i*:PW*:*)
  	echo ${UNAME_MACHINE}-pc-pw32
  	exit 0 ;;
--- build-aux/config.sub	Tue Aug 16 19:03:09 2011
+++ build-aux/config.sub	Tue Aug 16 19:02:55 2011
@@ -630,6 +630,10 @@ case $basic_machine in
 		basic_machine=i386-pc
 		os=-mingw32
 		;;
+	msys32)
+		basic_machine=i386-pc
+		os=-msys32
+		;;
 	miniframe)
 		basic_machine=m68000-convergent
 		;;
@@ -1130,7 +1134,7 @@ case $os in
 	      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \
 	      | -chorusos* | -chorusrdb* \
 	      | -cygwin* | -pe* | -psos* | -moss* | -proelf* | -rtems* \
-	      | -mingw32* | -linux-gnu* | -uxpv* | -beos* | -mpeix* | -udk* \
+	      | -mingw32* | -msys32* | -linux-gnu* | -uxpv* | -beos* | -mpeix* | -udk* \
 	      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \
 	      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \
 	      | -storm-chaos* | -tops10* | -tenex* | -tops20* | -its* \
--- lib/getaddrinfo.h	Tue Aug 16 19:34:06 2011
+++ lib/getaddrinfo.h	Tue Aug 16 19:16:11 2011
@@ -19,16 +19,17 @@
 #ifndef GETADDRINFO_H
 # define GETADDRINFO_H
 
 /* Get getaddrinfo declarations, if available.  Also get 'socklen_t',
    and 'struct sockaddr' via sys/types.h which are used below. */
 # include <sys/types.h>
 # include <sys/socket.h>
 # include <netdb.h>
+# include <netinet/in.h>
 
 # if !HAVE_GETADDRINFO
 
 /* Structure to contain information about address of a service provider.  */
 struct addrinfo
 {
   int ai_flags;			/* Input flags.  */
   int ai_family;		/* Protocol family for socket.  */
--- m4/strftime.m4	Tue Aug 16 19:34:33 2011
+++ m4/strftime.m4	Tue Aug 16 19:33:13 2011
@@ -19,17 +19,17 @@ AC_DEFUN([gl_FUNC_STRFTIME],
 [
  AC_LIBSOURCES([strftime.c, strftime.h])
  AC_LIBOBJ([strftime])
 
  # strftime.c uses the underyling system strftime if it exists.
  AC_REQUIRE([AC_FUNC_STRFTIME])
 
  # This defines (or not) HAVE_TZNAME and HAVE_TM_ZONE.
- AC_REQUIRE([AC_STRUCT_TIMEZONE])
+ #AC_REQUIRE([AC_STRUCT_TIMEZONE])
 
  AC_REQUIRE([AC_HEADER_TIME])
  AC_REQUIRE([AC_TYPE_MBSTATE_T])
  AC_REQUIRE([gl_TM_GMTOFF])
 
  AC_CHECK_FUNCS_ONCE(mblen mbrlen mempcpy tzset)
  AC_CHECK_HEADERS_ONCE(sys/time.h wchar.h)
 
--- m4/getdate.m4	Tue Aug 16 19:35:05 2011
+++ m4/getdate.m4	Tue Aug 16 19:35:00 2011
@@ -12,12 +12,12 @@ AC_DEFUN([gl_GETDATE],
   dnl Prerequisites of lib/getdate.h.
   AC_REQUIRE([AM_STDBOOL_H])
   AC_REQUIRE([gl_TIMESPEC])
 
   dnl Prerequisites of lib/getdate.y.
   AC_REQUIRE([gl_BISON])
   AC_REQUIRE([AC_HEADER_STDC])
   AC_CHECK_FUNCS_ONCE(isascii)
-  AC_STRUCT_TIMEZONE
+  #AC_STRUCT_TIMEZONE
   AC_REQUIRE([gl_CLOCK_TIME])
   AC_REQUIRE([gl_TM_GMTOFF])
 ])
--- config.h.in	Tue Aug 16 19:47:01 2011
+++ config.h.in	Tue Aug 16 19:43:48 2011
@@ -727,7 +727,6 @@
 
 /* Define to 1 if you don't have `tm_zone' but do have the external array
    `tzname'. */
-#undef HAVE_TZNAME
 
 /* Define to 1 if you have the `tzset' function. */
 #undef HAVE_TZSET
